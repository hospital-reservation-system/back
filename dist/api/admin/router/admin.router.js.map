{"version":3,"file":"admin.router.js","sourceRoot":"","sources":["../../../../src/api/admin/router/admin.router.ts"],"names":[],"mappings":";;;;;AAAA,+FAAsE;AACtE,qEAAqE;AACrE,8FAA0F;AAC1F,sDAA8B;AAC9B,iDAAgD;AAChD,uCAA2C;AAC3C,uFAAmF;AACnF,qFAAiF;AAEjF,MAAM,WAAW,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAErC,4EAA4E;AAE5E,6DAA6D;AAE7D,MAAM,eAAe,GAAG,IAAI,0BAAe,CACzC,IAAI,gCAAgB,CAClB,IAAI,kDAAuB,EAAE;AAC7B,wCAAwC;CACzC,CACF,CAAC;AAEF,MAAM,YAAY,GAAG;IACnB,yCAAyC;IACzC,OAAO,EAAE,aAAa;IACtB,mCAAmC;IACnC,UAAU,EAAE,aAAa;IACzB,gCAAgC;IAChC,qBAAqB;IACrB,SAAS,EAAE,eAAe;IAC1B,gCAAgC;IAChC,YAAY,EAAE,aAAa;IAC3B,mCAAmC;IACnC,YAAY,EAAE,gBAAgB;CAC/B,CAAC;AAEF,mCAAmC;AACnC,WAAW,CAAC,IAAI,CACd,IAAA,uBAAW,EAAC,YAAY,CAAC,OAAO,EAAE,oBAAY,CAAC,SAAS,CAAC,EACzD,eAAe,CAAC,MAAM,CACvB,CAAC;AAEF,8BAA8B;AAC9B,WAAW,CAAC,GAAG,CACb,IAAA,uBAAW,EAAC,YAAY,CAAC,UAAU,EAAE,oBAAY,CAAC,SAAS,CAAC,EAC5D,IAAA,wCAAkB,EAAC,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,EACzC,eAAe,CAAC,SAAS,CAC1B,CAAC;AAEF,2BAA2B;AAC3B,WAAW,CAAC,GAAG,CACb,IAAA,uBAAW,EAAC,YAAY,CAAC,SAAS,EAAE,oBAAY,CAAC,SAAS,CAAC,EAC3D,IAAA,wCAAkB,EAAC,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,EACzC,0CAAmB,EACnB,eAAe,CAAC,QAAQ,CACzB,CAAC;AAEF,2BAA2B;AAC3B,WAAW,CAAC,GAAG,CACb,IAAA,uBAAW,EAAC,YAAY,CAAC,YAAY,EAAE,oBAAY,CAAC,SAAS,CAAC,EAC9D,IAAA,wCAAkB,EAAC,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,EACzC,0CAAmB,EACnB,eAAe,CAAC,WAAW,CAC5B,CAAC;AAEF,2BAA2B;AAC3B,WAAW,CAAC,MAAM,CAChB,IAAA,uBAAW,EAAC,YAAY,CAAC,YAAY,EAAE,oBAAY,CAAC,SAAS,CAAC,EAC9D,IAAA,wCAAkB,EAAC,CAAC,OAAO,CAAC,CAAC,EAC7B,0CAAmB,EACnB,eAAe,CAAC,WAAW,CAC5B,CAAC;AAEF,kBAAe,WAAW,CAAC","sourcesContent":["import AdminController from \"@/api/admin/controller/admin.controller\";\r\nimport { AdminServiceImpl } from \"@/api/admin/service/admin.service\";\r\nimport { MongooseAdminRepository } from \"@/api/admin/repository/mongooseAdmin.repository\";\r\nimport express from \"express\";\r\nimport { extractPath } from \"@/utils/path.util\";\r\nimport { ROUTES_INDEX } from \"@/api/index\";\r\nimport { authAdminMiddleware } from \"@/api/common/middleware/authAdmin.middleware\";\r\nimport { authRoleMiddleware } from \"@/api/common/middleware/authRole.middleware\";\r\n\r\nconst adminRouter = express.Router();\r\n\r\n// const adminService = new AdminServiceImpl(new MongooseAdminRepository());\r\n\r\n// const adminController = new AdminController(adminService);\r\n\r\nconst adminController = new AdminController(\r\n  new AdminServiceImpl(\r\n    new MongooseAdminRepository()\r\n    // new MongooseSelectProductRepository()\r\n  )\r\n);\r\n\r\nconst ADMIN_ROUTES = {\r\n  /** 회원가입(role = admin, hospital)(post) */\r\n  SIGN_UP: `/api/admin/`,\r\n  /** 관리자 전체 조회(role = admin)(get) */\r\n  GET_ADMINS: `/api/admin/`,\r\n  /** 관리자 조회(role = admin)(get) */\r\n  // req.admin.id로 조회하기\r\n  GET_ADMIN: `/api/admin/me`,\r\n  /** 관리자 수정(role = admin)(put) */\r\n  UPDATE_ADMIN: `/api/admin/`,\r\n  /** 관리자 삭제(role = admin)(delete) */\r\n  DELETE_ADMIN: `/api/admin/:id`,\r\n};\r\n\r\n/** 회원가입(role = admin, hospital) */\r\nadminRouter.post(\r\n  extractPath(ADMIN_ROUTES.SIGN_UP, ROUTES_INDEX.ADMIN_API),\r\n  adminController.signup\r\n);\r\n\r\n/** 관리자 전체 조회(role = admin) */\r\nadminRouter.get(\r\n  extractPath(ADMIN_ROUTES.GET_ADMINS, ROUTES_INDEX.ADMIN_API),\r\n  authRoleMiddleware([\"admin\", \"hospital\"]),\r\n  adminController.getAdmins\r\n);\r\n\r\n/** 관리자 조회(role = admin) */\r\nadminRouter.get(\r\n  extractPath(ADMIN_ROUTES.GET_ADMIN, ROUTES_INDEX.ADMIN_API),\r\n  authRoleMiddleware([\"admin\", \"hospital\"]),\r\n  authAdminMiddleware,\r\n  adminController.getAdmin\r\n);\r\n\r\n/** 관리자 수정(role = admin) */\r\nadminRouter.put(\r\n  extractPath(ADMIN_ROUTES.UPDATE_ADMIN, ROUTES_INDEX.ADMIN_API),\r\n  authRoleMiddleware([\"admin\", \"hospital\"]),\r\n  authAdminMiddleware,\r\n  adminController.updateAdmin\r\n);\r\n\r\n/** 관리자 삭제(role = admin) */\r\nadminRouter.delete(\r\n  extractPath(ADMIN_ROUTES.DELETE_ADMIN, ROUTES_INDEX.ADMIN_API),\r\n  authRoleMiddleware([\"admin\"]),\r\n  authAdminMiddleware,\r\n  adminController.deleteAdmin\r\n);\r\n\r\nexport default adminRouter;\r\n"]}