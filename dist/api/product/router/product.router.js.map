{"version":3,"file":"product.router.js","sourceRoot":"","sources":["../../../../src/api/product/router/product.router.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAE9B,0FAAiE;AACjE,iDAAgD;AAChD,+BAAqC;AACrC,gEAAgE;AAChE,yFAAqF;AACrF,8FAA0F;AAC1F,uFAAmF;AACnF,qFAAiF;AACjF,MAAM,aAAa,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEvC,MAAM,iBAAiB,GAAG,IAAI,4BAAiB,CAC7C,IAAI,oCAAkB,CACpB,IAAI,sDAAyB,EAAE,EAC/B,IAAI,kDAAuB,EAAE,CAC9B,CACF,CAAC;AAEF,MAAM,cAAc,GAAG;IACrB,YAAY,EAAE,cAAc;IAC5B,WAAW,EAAE,yBAAyB;IACtC,cAAc,EAAE,cAAc;IAC9B,cAAc,EAAE,yBAAyB;IACzC,cAAc,EAAE,yBAAyB;CAC1C,CAAC;AAEF,aAAa,CAAC,GAAG,CACf,IAAA,uBAAW,EAAC,cAAc,CAAC,YAAY,EAAE,kBAAY,CAAC,WAAW,CAAC;AAClE,6CAA6C;AAC7C,iBAAiB,CAAC,WAAW,CAC9B,CAAC;AACF,aAAa,CAAC,GAAG,CACf,IAAA,uBAAW,EAAC,cAAc,CAAC,WAAW,EAAE,kBAAY,CAAC,WAAW,CAAC;AACjE,6CAA6C;AAC7C,iBAAiB,CAAC,UAAU,CAC7B,CAAC;AACF,aAAa,CAAC,IAAI,CAChB,IAAA,uBAAW,EAAC,cAAc,CAAC,cAAc,EAAE,kBAAY,CAAC,WAAW,CAAC,EACpE,IAAA,wCAAkB,EAAC,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,EACzC,0CAAmB,EACnB,iBAAiB,CAAC,aAAa,CAChC,CAAC;AACF,aAAa,CAAC,GAAG,CACf,IAAA,uBAAW,EAAC,cAAc,CAAC,cAAc,EAAE,kBAAY,CAAC,WAAW,CAAC,EACpE,IAAA,wCAAkB,EAAC,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,EACzC,0CAAmB,EACnB,iBAAiB,CAAC,aAAa,CAChC,CAAC;AACF,aAAa,CAAC,MAAM,CAClB,IAAA,uBAAW,EAAC,cAAc,CAAC,cAAc,EAAE,kBAAY,CAAC,WAAW,CAAC,EACpE,IAAA,wCAAkB,EAAC,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,EACzC,0CAAmB,EACnB,iBAAiB,CAAC,aAAa,CAChC,CAAC;AAEF,kBAAe,aAAa,CAAC","sourcesContent":["import express from \"express\";\r\n\r\nimport ProductController from \"../controller/product.controller\";\r\nimport { extractPath } from \"@/utils/path.util\";\r\nimport { ROUTES_INDEX } from \"@/api\";\r\nimport { ProductServiceImpl } from \"../service/product.service\";\r\nimport { MongooseProductRepository } from \"../repository/mongooseProduct.repository\";\r\nimport { MongooseAdminRepository } from \"@/api/admin/repository/mongooseAdmin.repository\";\r\nimport { authAdminMiddleware } from \"@/api/common/middleware/authAdmin.middleware\";\r\nimport { authRoleMiddleware } from \"@/api/common/middleware/authRole.middleware\";\r\nconst prodcutRouter = express.Router();\r\n\r\nconst productController = new ProductController(\r\n  new ProductServiceImpl(\r\n    new MongooseProductRepository(), \r\n    new MongooseAdminRepository()\r\n  ),\r\n);\r\n\r\nconst PRODUCT_ROUTES = {\r\n  GET_PRODUCTS: \"/api/product\",\r\n  GET_PRODUCT: \"/api/product/:productId\",\r\n  CREATE_PRODUCT: \"/api/product\",\r\n  UPDATE_PRODUCT: \"/api/product/:productId\",\r\n  DELETE_PRODUCT: \"/api/product/:productId\",\r\n};\r\n\r\nprodcutRouter.get(\r\n  extractPath(PRODUCT_ROUTES.GET_PRODUCTS, ROUTES_INDEX.PRODUCT_API),\r\n  // authRoleMiddleware([\"admin\", \"hospital\"]),\r\n  productController.getProducts\r\n);\r\nprodcutRouter.get(\r\n  extractPath(PRODUCT_ROUTES.GET_PRODUCT, ROUTES_INDEX.PRODUCT_API),\r\n  // authRoleMiddleware([\"admin\", \"hospital\"]),\r\n  productController.getProduct\r\n);\r\nprodcutRouter.post(\r\n  extractPath(PRODUCT_ROUTES.CREATE_PRODUCT, ROUTES_INDEX.PRODUCT_API),\r\n  authRoleMiddleware([\"admin\", \"hospital\"]),\r\n  authAdminMiddleware,\r\n  productController.createProduct\r\n);\r\nprodcutRouter.put(\r\n  extractPath(PRODUCT_ROUTES.UPDATE_PRODUCT, ROUTES_INDEX.PRODUCT_API),\r\n  authRoleMiddleware([\"admin\", \"hospital\"]),\r\n  authAdminMiddleware,\r\n  productController.updateProduct\r\n);\r\nprodcutRouter.delete(\r\n  extractPath(PRODUCT_ROUTES.DELETE_PRODUCT, ROUTES_INDEX.PRODUCT_API),\r\n  authRoleMiddleware([\"admin\", \"hospital\"]),\r\n  authAdminMiddleware,\r\n  productController.deleteProduct\r\n);\r\n\r\nexport default prodcutRouter;\r\n"]}