{"version":3,"file":"order.router.js","sourceRoot":"","sources":["../../../../src/api/order/router/order.router.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,+FAAsE;AACtE,8FAA0F;AAC1F,8FAA0F;AAC1F,oGAAgG;AAChG,sHAAkH;AAClH,qEAAqE;AACrE,iDAAgD;AAChD,+BAAqC;AAErC,MAAM,WAAW,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AACrC,MAAM,eAAe,GAAG,IAAI,0BAAe,CACzC,IAAI,gCAAgB,CAClB,IAAI,kDAAuB,EAAE,EAC7B,IAAI,kDAAuB,EAAE,EAC7B,IAAI,sDAAyB,EAAE,EAC/B,IAAI,kEAA+B,EAAE,CACtC,CACF,CAAC;AAEF,MAAM,YAAY,GAAG;IACnB,YAAY;IACZ,YAAY,EAAE,YAAY;IAC1B,YAAY;IACZ,YAAY,EAAE,qBAAqB;IACnC,YAAY;IACZ,YAAY,EAAE,qBAAqB;IACnC,YAAY;IACZ,UAAU,EAAE,YAAY;IACxB,eAAe;IACf,oCAAoC;IACpC,SAAS,EAAE,mBAAmB;CACtB,CAAC;AAEX,YAAY;AACZ,WAAW,CAAC,IAAI,CACd,IAAA,uBAAW,EAAC,YAAY,CAAC,YAAY,EAAE,kBAAY,CAAC,SAAS,CAAC,EAC9D,eAAe,CAAC,WAAW,CAC5B,CAAC;AAEF,YAAY;AACZ,WAAW,CAAC,GAAG,CACb,IAAA,uBAAW,EAAC,YAAY,CAAC,YAAY,EAAE,kBAAY,CAAC,SAAS,CAAC,EAC9D,eAAe,CAAC,WAAW,CAC5B,CAAC;AAEF,YAAY;AACZ,WAAW,CAAC,MAAM,CAChB,IAAA,uBAAW,EAAC,YAAY,CAAC,YAAY,EAAE,kBAAY,CAAC,SAAS,CAAC,EAC9D,eAAe,CAAC,WAAW,CAC5B,CAAC;AAEF,YAAY;AACZ,WAAW,CAAC,GAAG,CACb,IAAA,uBAAW,EAAC,YAAY,CAAC,UAAU,EAAE,kBAAY,CAAC,SAAS,CAAC,EAC5D,eAAe,CAAC,SAAS,CAC1B,CAAC;AAEF,eAAe;AACf,WAAW,CAAC,GAAG,CACb,IAAA,uBAAW,EAAC,YAAY,CAAC,SAAS,EAAE,kBAAY,CAAC,SAAS,CAAC,EAC3D,eAAe,CAAC,QAAQ,CACzB,CAAC;AAEF,kBAAe,WAAW,CAAC","sourcesContent":["import express from \"express\";\r\nimport OrderController from \"@/api/order/controller/order.controller\";\r\nimport { MongooseOrderRepository } from \"@/api/order/repository/mongooseOrder.repository\";\r\nimport { MongooseAdminRepository } from \"@/api/admin/repository/mongooseAdmin.repository\";\r\nimport { MongooseProductRepository } from \"@/api/product/repository/mongooseProduct.repository\";\r\nimport { MongooseSelectProductRepository } from \"@/api/selectProduct/repository/mongooseSelectProduct.repository\";\r\nimport { OrderServiceImpl } from \"@/api/order/service/order.service\";\r\nimport { extractPath } from \"@/utils/path.util\";\r\nimport { ROUTES_INDEX } from \"@/api\";\r\n\r\nconst orderRouter = express.Router();\r\nconst orderController = new OrderController(\r\n  new OrderServiceImpl(\r\n    new MongooseOrderRepository(),\r\n    new MongooseAdminRepository(),\r\n    new MongooseProductRepository(),\r\n    new MongooseSelectProductRepository()\r\n  )\r\n);\r\n\r\nconst ORDER_ROUTER = {\r\n  /** 주문 생성 */\r\n  CREATE_ORDER: \"/api/order\",\r\n  /** 주문 수정 */\r\n  UPDATE_ORDER: \"/api/order/:orderId\",\r\n  /** 주문 삭제 */\r\n  DELETE_ORDER: \"/api/order/:orderId\",\r\n  /** 주문 조회 */\r\n  GET_ORDERS: \"/api/order\",\r\n  /** 주문 상세 조회 */\r\n  // GET_ORDER: \"/api/order/:orderId\",\r\n  GET_ORDER: \"/api/order/detail\",\r\n} as const;\r\n\r\n/** 주문 생성 */\r\norderRouter.post(\r\n  extractPath(ORDER_ROUTER.CREATE_ORDER, ROUTES_INDEX.ORDER_API),\r\n  orderController.createOrder\r\n);\r\n\r\n/** 주문 수정 */\r\norderRouter.put(\r\n  extractPath(ORDER_ROUTER.UPDATE_ORDER, ROUTES_INDEX.ORDER_API),\r\n  orderController.updateOrder\r\n);\r\n\r\n/** 주문 삭제 */\r\norderRouter.delete(\r\n  extractPath(ORDER_ROUTER.DELETE_ORDER, ROUTES_INDEX.ORDER_API),\r\n  orderController.deleteOrder\r\n);\r\n\r\n/** 주문 조회 */\r\norderRouter.get(\r\n  extractPath(ORDER_ROUTER.GET_ORDERS, ROUTES_INDEX.ORDER_API),\r\n  orderController.getOrders\r\n);\r\n\r\n/** 주문 상세 조회 */\r\norderRouter.get(\r\n  extractPath(ORDER_ROUTER.GET_ORDER, ROUTES_INDEX.ORDER_API),\r\n  orderController.getOrder\r\n);\r\n\r\nexport default orderRouter;\r\n"]}