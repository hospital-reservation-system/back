{"version":3,"file":"errorHandler.middleware.js","sourceRoot":"","sources":["../../../../src/api/common/middleware/errorHandler.middleware.ts"],"names":[],"mappings":";;;;;AACA,kFAAyD;AAEzD,SAAS,YAAY,CACnB,GAAmC,EACnC,GAAY,EACZ,GAAa,EACb,IAAkB;IAElB,IAAI,GAAG,YAAY,wBAAa,EAAE,CAAC;QACjC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;YACrC,OAAO,EAAE,cAAc;YACvB,OAAO,EAAE,GAAG,CAAC,OAAO;YACpB,IAAI,EAAE,GAAG,CAAC,KAAK;SAChB,CAAC,CAAC;IACL,CAAC;IAED,IAAI,GAAG,YAAY,KAAK,EAAE,CAAC;QACzB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAE,uBAAuB;YAChC,OAAO,EAAE,GAAG,CAAC,OAAO;SACrB,CAAC,CAAC;IACL,CAAC;IACD,IAAI,EAAE,CAAC;AACT,CAAC;AAED,kBAAe,YAAY,CAAC","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\r\nimport HttpException from \"../exceptions/http.exception\";\r\n\r\nfunction errorHandler(\r\n  err: Error & { statusCode: number },\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Response | void {\r\n  if (err instanceof HttpException) {\r\n    return res.status(err.statusCode).send({\r\n      message: \"client Error\",\r\n      details: err.message,\r\n      code: err.cause,\r\n    });\r\n  }\r\n\r\n  if (err instanceof Error) {\r\n    res.status(500).send({\r\n      message: \"Internal Server Error\",\r\n      details: err.message,\r\n    });\r\n  }\r\n  next();\r\n}\r\n\r\nexport default errorHandler;\r\n"]}