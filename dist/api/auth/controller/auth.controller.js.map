{"version":3,"file":"auth.controller.js","sourceRoot":"","sources":["../../../../src/api/auth/controller/auth.controller.ts"],"names":[],"mappings":";;AAIA,MAAqB,cAAc;IACJ;IAA7B,YAA6B,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QACpD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,KAAK,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QACzD,IAAI,CAAC;YACH,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;YAErC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;YAE9D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACnB,OAAO,EAAE,QAAQ;gBACjB,IAAI,EAAE,MAAM;aACb,CAAC,CAAC;QACL,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC9C,CAAC;IACH,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;QAC1D,IAAI,CAAC;YACH,GAAG,CAAC,WAAW,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;YAC9C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAChC,oBAAoB;QACtB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,CAAC;QACd,CAAC;IACH,CAAC;CACF;AA9BD,iCA8BC","sourcesContent":["import { NextFunction, Request, Response } from \"express\";\r\nimport { AuthService } from \"@/api/auth/service/auth.service.type\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nexport default class AuthController {\r\n  constructor(private readonly _authService: AuthService) {\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  async login(req: Request, res: Response, next: NextFunction) {\r\n    try {\r\n      const { email, password } = req.body;\r\n\r\n      const result = await this._authService.login(email, password);\r\n\r\n      res.status(200).json({\r\n        message: \"로그인 성공\",\r\n        data: result,\r\n      });\r\n    } catch (error) {\r\n      res.status(500).json({ message: \"로그인 실패\" });\r\n    }\r\n  }\r\n\r\n  async logout(req: Request, res: Response, next: NextFunction) {\r\n    try {\r\n      res.clearCookie(\"accessToken\", { path: \"/\" });\r\n      res.status(200).send(\"로그아웃 성공\");\r\n      // res.redirect('/')\r\n    } catch (error) {\r\n      next(error);\r\n    }\r\n  }\r\n}\r\n"]}