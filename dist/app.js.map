{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,0DAA6B;AAC7B,oDAA4B;AAC5B,kEAAyC;AACzC,gDAAwB;AAExB,uCAA2C;AAE3C,mFAA0D;AAC1D,yFAAgE;AAChE,2GAAkF;AAClF,mFAA0D;AAC1D,gFAAuD;AACvD,8GAA2E,CAAC,eAAe;AAE3F,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;AACtB,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAEtC,GAAG,CAAC,GAAG,CACL,IAAA,cAAI,EAAC;IACH,aAAa;IACb,MAAM,EAAE,uBAAuB;IAC/B,WAAW;IACX,WAAW,EAAE,IAAI;CAClB,CAAC,CACH,CAAC;AAEF,GAAG,CAAC,GAAG,CAAC,IAAA,gBAAM,EAAC,KAAK,CAAC,CAAC,CAAC;AACvB,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,iBAAO,CAAC,MAAM,CAAC,mBAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;AAEtE,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,IAAA,uBAAY,GAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AAEjD,qBAAqB;AACrB,GAAG,CAAC,GAAG,CAAC,oBAAY,CAAC,WAAW,EAAE,wBAAa,CAAC,CAAC;AAEjD,mBAAmB;AACnB,GAAG,CAAC,GAAG,CAAC,oBAAY,CAAC,SAAS,EAAE,sBAAW,CAAC,CAAC;AAE7C,4BAA4B;AAC5B,GAAG,CAAC,GAAG,CAAC,oBAAY,CAAC,kBAAkB,EAAE,8BAAmB,CAAC,CAAC;AAE9D,mBAAmB;AACnB,GAAG,CAAC,GAAG,CAAC,oBAAY,CAAC,SAAS,EAAE,sBAAW,CAAC,CAAC;AAE7C,kBAAkB;AAClB,GAAG,CAAC,GAAG,CAAC,oBAAY,CAAC,QAAQ,EAAE,qBAAU,CAAC,CAAC;AAE3C,GAAG,CAAC,GAAG,CAAC,iCAAY,CAAC,CAAC;AAEtB,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACpB,OAAO,CAAC,GAAG,CAAC,sCAAsC,IAAI,MAAM,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC","sourcesContent":["import express from \"express\";\r\nimport path from \"node:path\";\r\nimport morgan from \"morgan\";\r\nimport cookieParser from \"cookie-parser\";\r\nimport cors from \"cors\";\r\n\r\nimport { ROUTES_INDEX } from \"@/api/index\";\r\n\r\nimport adminRouter from \"@/api/admin/router/admin.router\";\r\nimport productRouter from \"@/api/product/router/product.router\";\r\nimport selectProductRouter from \"@/api/selectProduct/router/selectProduct.router\";\r\nimport orderRouter from \"@/api/order/router/order.router\";\r\nimport authRouter from \"@/api/auth/router/auth.router\";\r\nimport errorHandler from \"./api/common/middleware/errorHandler.middleware\"; // errorhandler\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 4000;\r\n\r\napp.use(\r\n  cors({\r\n    // 프론트엔드의 도메인\r\n    origin: \"http://localhost:3000\",\r\n    // 쿠키 전송 허용\r\n    credentials: true,\r\n  })\r\n);\r\n\r\napp.use(morgan(\"dev\"));\r\napp.use(\"/static\", express.static(path.join(__dirname, \"../public\")));\r\n\r\napp.use(express.json());\r\napp.use(cookieParser());\r\napp.use(express.urlencoded({ extended: false }));\r\n\r\n/** product router */\r\napp.use(ROUTES_INDEX.PRODUCT_API, productRouter);\r\n\r\n/** admin router */\r\napp.use(ROUTES_INDEX.ADMIN_API, adminRouter);\r\n\r\n/** select product router */\r\napp.use(ROUTES_INDEX.SELECT_PRODUCT_API, selectProductRouter);\r\n\r\n/** order router */\r\napp.use(ROUTES_INDEX.ORDER_API, orderRouter);\r\n\r\n/** auth router */\r\napp.use(ROUTES_INDEX.AUTH_API, authRouter);\r\n\r\napp.use(errorHandler);\r\n\r\napp.listen(port, () => {\r\n  console.log(`SERVER started at http://localhost:${port} ^-^`);\r\n});\r\n"]}